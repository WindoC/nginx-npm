name: buildx

on:
  create:
    tags:
      - v*

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE_dockerhub=windoac/nginx-npm
          DOCKER_IMAGE_github=ghcr.io/windoc/nginx-npm
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v7,linux/arm64/v8
          VERSION=edge

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=$(echo $VERSION | sed 's/^v//g')
          fi

          TAGS="--tag ${DOCKER_IMAGE_dockerhub}:${VERSION}"
          TAGS="$TAGS --tag ${DOCKER_IMAGE_github}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3} ]]; then
            # add latest
            TAGS="$TAGS --tag ${DOCKER_IMAGE_dockerhub}:latest"
            TAGS="$TAGS --tag ${DOCKER_IMAGE_github}:latest"
          fi

          echo "docker_image_dockerhub=${DOCKER_IMAGE_dockerhub}" >> $GITHUB_OUTPUT
          echo "docker_image_github=${DOCKER_IMAGE_github}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "buildx_args=--platform ${DOCKER_PLATFORMS} --build-arg VERSION=${VERSION} --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') --build-arg VCS_REF=${GITHUB_SHA::8} ${TAGS} --file ./Dockerfile ." >> $GITHUB_OUTPUT
      # https://github.com/docker/setup-qemu-action
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        # with:
        #   cache-from: type=gha
        #   cache-to: type=gha,mode=max
      -
        name: Docker Buildx (build)
        run: |
          docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
      -
        name: Login to DockerHub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to ghcr.io
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker Buildx (push)
        if: success() && github.event_name != 'pull_request'
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
      -
        name: Inspect image (DockerHub)
        if: always() && github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image_dockerhub }}:${{ steps.prepare.outputs.version }}
      -
        name: Inspect image (GitHub)
        if: always() && github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image_github }}:${{ steps.prepare.outputs.version }}
